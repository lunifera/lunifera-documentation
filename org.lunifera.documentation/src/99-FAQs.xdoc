chapter:FAQs[FAQs]

ul[

item[Whats the license of lunifera.org?
	ul[
		item[Lunifera.org is licensed under the link[http://www.eclipse.org/legal/epl-v10.html][EPL (Eclipse public license)]]
	]
]

item[Can i run my vaadin application without using luniferas jetty and http service? 
	ul[
		item[Yes, just follow ref:VaadinTutorial_RunStandalone[Vaadin Standalone Example Tutorial]. It uses the code[org.eclipse.equinox.http.jetty]
		bundle instead.]
	]
]

item[Why do i have to specify the class name and the vaadin application in the service component of my
UI-class? Like code[factory="org.lunifera.web.vaadin.UI/org.lunifera.examples.runtime.web.vaadin.cm.Vaadin7CMDemoUI@VaadinCMDemo"]
	ul[
		item[Thats based on OSGi issues. To provide different instances of UI.class we are using a ComponentFactory.
		Since ref:_UIProvider[vaadin.UiProvider] requires the type of UI, we have to specify it in the
		component as a string. The bundle class loader will load the class properly.
		The vaadin application suffix (code["@VaadinCMDemo"] addresses the vaadin application the UI
		belongs to. If it is missing, the UI belongs to all vaadin applications.]
	]
]

item[How can i start different jetty servers? 
	ul[
		item[You only have to use OSGi-CM (Config Admin) to configure different instances. See ref:JettyService[JettyService].
		You also can put another .cfg file into your bundle as a default. The .cfg file defines properties
		that are passed to the Config Admin. See ref:VaadinTutorial_HttpAndJetty_VaadinApplicationBundle_Configure[Configure Applications]]
	]
]

item[How can i start different http applications? 
	ul[
		item[You only have to use OSGi-CM (Config Admin) to configure different instances. See ref:HttpApplication[HttpApplication].
		You also can put another .cfg file into your bundle as a default. The .cfg file defines properties
		that are passed to the Config Admin. See ref:VaadinTutorial_HttpAndJetty_VaadinApplicationBundle_Configure[Configure Applications]]
	]
]

item[What is a http application in lunifera?
	ul[
		item[Each http application provides its own ServletContext. It is a way to run different code["context path"]
		on the same jetty server. Using pure equinox jetty service, it won't be possible. See ref:HttpApplication[HttpApplication].]
	]
]

]

